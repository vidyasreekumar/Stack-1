// Time Complexity : O(n)
// Space Complexity : O(n)

// Iterate the array from 0 to 2*n, push to the stack if top of stack is greater than the incoming element
// When top of stack is lesser, pop from stack and update value in result array for that element
// Return the result array

class Solution {
    public int[] nextGreaterElements(int[] nums) {
        Stack<Integer> st = new Stack<>();
        int n = nums.length;
        int[] result = new int[n];
        Arrays.fill(result, -1);

        for(int i = 0; i < 2*n; i++) {
            while(!st.isEmpty() && nums[st.peek()] < nums[i%n])
                result[st.pop()] = nums[i%n];
            if(i < n)
                st.push(i);
        }
        return result;
    }
}